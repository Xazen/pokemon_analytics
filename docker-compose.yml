version: '3.8'

services:
  # PostgreSQL: Primary database for all Pokemon analytics data
  # Stores raw API data, staging tables, and final analytics datasets
  # Access: localhost:5432 (pokemon_user/pokemon_pass)
  postgres:
    image: postgres:15-alpine
    container_name: pokemon_postgres
    environment:
      POSTGRES_DB: pokemon_analytics
      POSTGRES_USER: pokemon_user
      POSTGRES_PASSWORD: pokemon_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d
    networks:
      - pokemon_network

  # pgAdmin: Web-based PostgreSQL administration tool
  # Database management, query execution, schema visualization
  # Access: http://localhost:5050 (admin@pokemon.com/admin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pokemon_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pokemon.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - pokemon_network

  # Spark Master: Coordinates the Spark cluster
  # Manages workers, distributes tasks, provides cluster UI
  # Access: http://localhost:8080 (Spark UI)
  spark-master:
    build:
      context: .
      dockerfile: docker/spark/Dockerfile
    image: pokemon-analytics/spark:latest
    container_name: pokemon_spark_master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"  # Spark Web UI
      - "7077:7077"  # Spark Master Port
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    networks:
      - pokemon_network

  # Spark Worker: Executes Spark jobs and tasks
  # Connects to master, provides 2GB RAM and 2 CPU cores
  # Handles distributed data processing workloads
  spark-worker:
    build:
      context: .
      dockerfile: docker/spark/Dockerfile
    image: pokemon-analytics/spark:latest
    container_name: pokemon_spark_worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    networks:
      - pokemon_network

  # Jupyter Lab: Interactive development environment
  # Python notebooks for data analysis and experimentation
  # Access: http://localhost:8888 (check logs for token)
  jupyter:
    build:
      context: .
      dockerfile: docker/jupyter/Dockerfile
    image: pokemon-analytics/jupyter:latest
    container_name: pokemon_jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./src:/home/jovyan/src
      - ./data:/home/jovyan/data
    environment:
      - JUPYTER_ENABLE_LAB=yes
    networks:
      - pokemon_network

  # Redis: Message broker for Airflow's CeleryExecutor
  # Handles task queuing and communication between scheduler and workers
  # In-memory data store for fast task dispatch
  redis:
    image: redis:7-alpine
    container_name: pokemon_redis
    networks:
      - pokemon_network

  # Airflow Init: One-time database initialization container
  # Sets up Airflow metadata tables and creates admin user
  # Runs once during first startup, then exits
  airflow-init:
    build:
      context: .
      dockerfile: docker/airflow/Dockerfile
    image: pokemon-analytics/airflow:latest
    container_name: pokemon_airflow_init
    depends_on:
      - postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://pokemon_user:pokemon_pass@postgres:5432/pokemon_analytics
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://pokemon_user:pokemon_pass@postgres:5432/pokemon_analytics
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=81HqDtbqAywKSOumSHA3BhWNOdQ26slT6K0YaZeZyPs=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=true
      - _AIRFLOW_DB_UPGRADE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
    command: |
      bash -c "
      airflow db init &&
      airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@pokemon.com
      "
    networks:
      - pokemon_network

  # Airflow Webserver: Web UI for workflow management
  # Dashboard for monitoring DAGs, tasks, logs, and system health
  # Access: http://localhost:8081 (admin/admin)
  airflow-webserver:
    build:
      context: .
      dockerfile: docker/airflow/Dockerfile
    image: pokemon-analytics/airflow:latest
    container_name: pokemon_airflow_webserver
    depends_on:
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://pokemon_user:pokemon_pass@postgres:5432/pokemon_analytics
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://pokemon_user:pokemon_pass@postgres:5432/pokemon_analytics
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=81HqDtbqAywKSOumSHA3BhWNOdQ26slT6K0YaZeZyPs=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=true
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
    ports:
      - "8081:8080"
    command: airflow webserver
    networks:
      - pokemon_network

  # Airflow Scheduler: Core orchestration engine
  # Monitors DAG files, schedules tasks based on dependencies and timing
  # Distributes tasks to Redis queue for worker execution
  airflow-scheduler:
    build:
      context: .
      dockerfile: docker/airflow/Dockerfile
    image: pokemon-analytics/airflow:latest
    container_name: pokemon_airflow_scheduler
    depends_on:
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://pokemon_user:pokemon_pass@postgres:5432/pokemon_analytics
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://pokemon_user:pokemon_pass@postgres:5432/pokemon_analytics
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=81HqDtbqAywKSOumSHA3BhWNOdQ26slT6K0YaZeZyPs=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
    command: airflow scheduler
    networks:
      - pokemon_network

  # Airflow Worker: Task execution engine
  # Consumes tasks from Redis queue and executes them
  # Can scale horizontally by running multiple workers
  airflow-worker:
    build:
      context: .
      dockerfile: docker/airflow/Dockerfile
    image: pokemon-analytics/airflow:latest
    container_name: pokemon_airflow_worker
    depends_on:
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://pokemon_user:pokemon_pass@postgres:5432/pokemon_analytics
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://pokemon_user:pokemon_pass@postgres:5432/pokemon_analytics
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=81HqDtbqAywKSOumSHA3BhWNOdQ26slT6K0YaZeZyPs=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
    command: airflow celery worker
    networks:
      - pokemon_network

volumes:
  postgres_data:

networks:
  pokemon_network:
    driver: bridge